name: Build and Release CodeWalker API

on:
  push:
    tags:
      - "v*"  # Runs when a version tag like v1.0.0 is pushed

jobs:
  build:
    runs-on: windows-latest  # Windows required for CodeWalker
    steps:
      - name: Checkout CodeWalker.API Repo
        uses: actions/checkout@v4
        with:
          path: CodeWalker.API  # Clones into ${{ github.workspace }}/CodeWalker.API

      - name: Clone Full CodeWalker Repo (for CodeWalker.Core)
        run: |
          git clone --depth=1 https://github.com/dexyfex/CodeWalker.git "${{ github.workspace }}/CodeWalkerRepo"

      - name: Move CodeWalker.Core to Workdirectory
        run: |
          move "${{ github.workspace }}\CodeWalkerRepo\CodeWalker.Core" "${{ github.workspace }}"

      - name: Verify CodeWalker.Core Exists
        shell: pwsh
        run: |
          if (!(Test-Path "${{ github.workspace }}/CodeWalker.Core/CodeWalker.Core.csproj")) {
            Write-Host "❌ CodeWalker.Core is missing!"
            exit 1
          } else {
            Write-Host "✅ CodeWalker.Core is present."
          }

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      - name: Restore NuGet Packages for Both Projects
        run: |
          nuget restore "${{ github.workspace }}/CodeWalker.Core/CodeWalker.Core.csproj"
          nuget restore "${{ github.workspace }}/CodeWalker.API/CodeWalker.API.csproj"

      - name: Build CodeWalker.API
        run: |
          cd "${{ github.workspace }}/CodeWalker.API"
          msbuild CodeWalker.API.csproj /p:Configuration=Release

      - name: Archive the Built Files
        shell: cmd
        run: |
          mkdir "${{ github.workspace }}/build-output"
          robocopy "${{ github.workspace }}/CodeWalker.API/bin/Release" "${{ github.workspace }}/build-output" /E || exit 0
          echo "Contents of build-output:"
          dir "${{ github.workspace }}/build-output"

      - name: Package Build Output as ZIP (Flatten Structure)
        shell: cmd
        run: |
          mkdir "${{ github.workspace }}/flat-output"
          robocopy "${{ github.workspace }}/CodeWalker.API/bin/Release/net9.0" "${{ github.workspace }}/flat-output" /E || exit 0
          echo "Contents of flat-output:"
          dir "${{ github.workspace }}/flat-output"

          echo "Creating ZIP..."
          powershell Compress-Archive -Path "${{ github.workspace }}/flat-output/*" -DestinationPath "${{ github.workspace }}/CodeWalker.API.zip"

          echo "Checking if ZIP file exists:"
          if not exist "${{ github.workspace }}/CodeWalker.API.zip" (
              echo "❌ ERROR: ZIP file was not created!"
              exit 1
          ) else (
              echo "✅ ZIP file created successfully."
          )

      - name: Debug - List Workspace Contents
        shell: cmd
        run: dir /s "${{ github.workspace }}"

      - name: Upload Release
        uses: softprops/action-gh-release@v2
        with:
          files: "${{ github.workspace }}/CodeWalker.API.zip"
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
